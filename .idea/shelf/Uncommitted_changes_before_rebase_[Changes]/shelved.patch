Index: Pbulishare Proj.sql
===================================================================
diff --git a/Pbulishare Proj.sql b/Pbulishare Proj.sql
deleted file mode 100644
--- a/Pbulishare Proj.sql	(revision 6509c742f7d436d44ea16abf0f481d312d84cb9e)
+++ /dev/null	(revision 6509c742f7d436d44ea16abf0f481d312d84cb9e)
@@ -1,216 +0,0 @@
-
---							Publishare Project
-use Publishare
-
-SELECT * 
---FROM authors
---from articles
-from traffic
---from products
---from catrgories
- 
---1
-SELECT au.author,title
-FROM authors as au JOIN articles art
-on au.author_id=art.author_id
---2
-SELECT title,traffic_day,article_views
-FROM traffic tr JOIN articles art
-on tr.article_id=art.article_id
---3
-SELECT category_name,product_name
-FROM categories cat join products pro
-on cat.category_id=pro.category_id
---4
-SELECT title,traffic_day,article_views,product_name,product_views
-FROM traffic tr JOIN articles art
-on tr.article_id=art.article_id
-JOIN products pro
-on pro.product_id=tr.product_id
-
---5
-SELECT title,sum(article_views) as total_article_views,sum(product_views)total_prod_views
-FROM traffic tr JOIN articles art
-on tr.article_id=art.article_id
-JOIN products pro
-on pro.product_id=tr.product_id
-group by title
-
---6 same article - difffernet number of product views
-SELECT product_name,art.article_id,sum(product_views)total_prod_views
-FROM traffic tr JOIN articles art
-on tr.article_id=art.article_id
-JOIN products pro
-on pro.product_id=tr.product_id
-group by product_name,art.article_id
-order by 1,2
-
---7 Article perfor
-SELECT title,traffic_day,sum(article_views)over (partition by title order by traffic_day) as Accum_article_views
-FROM traffic tr JOIN articles art
-on tr.article_id=art.article_id
-
---8 Authors perfor
-SELECT aut.author, count(distinct art.article_id) NumOfArticles,sum(article_views) as 'TotalViews'
-FROM authors aut join articles art
-on aut.author_id=art.author_id
-JOIN traffic tr 
-on tr.article_id=art.article_id
-group by aut.author
-Order by 2 desc
---9
-SELECT aut.author,traffic_day,sum(article_views)as [Total Article Views],
-sum(case when category_name='Technology' then article_views else ''end ) as 'Tech Views',
-sum(case when category_name='Energy' then article_views else ' 'end) as 'Energy Views',
-sum(case when category_name='Finance' then article_views else '' end ) as 'Finance Views',
-sum(case when category_name='Transportation' then article_views else ''end ) as 'Transp Views'
-FROM authors aut join articles art
-on aut.author_id=art.author_id
-JOIN traffic tr 
-on tr.article_id=art.article_id
-join products pro
-on pro.product_id=tr.product_id
-join categories cat 
-on cat.category_id=pro.category_id
---where aut.author like 'Abhish%'
-group by aut.author,traffic_day
-order  by 1,2
-
---10 Products perf
-SELECT category_name,product_name,sum(product_views) as Toal_Product_View,
-SUM(SUM(product_views)) OVER (partition by category_name) as Category_Views,
-format(cast(sum(product_views)as numeric)/sum(SUM(product_views)) OVER (partition by category_name)*100,'##.##') as View_Pct
-FROM products pro join categories cat 
-on cat.category_id=pro.category_id
-JOIN traffic tr
-on pro.product_id=tr.product_id
-
-group by category_name,product_name
-
-----Option B
-SELECT distinct product_name,category_name,sum(product_views) over (partition by pro.product_name)as Product_Views,
-SUM(product_views) OVER (partition by category_name) as Category_Views,
-format(cast(sum(product_views) over (partition by pro.product_name) as numeric)
-/SUM(product_views) OVER (partition by category_name)*100,'##.##') as Pct_Views
-FROM products pro join categories cat 
-on cat.category_id=pro.category_id
-JOIN traffic tr
-on pro.product_id=tr.product_id
---where product_name = 'Alpha 414'
-order by 2
-
---11
-SELECT datename(MM,traffic_day) as Month_tra,datename(WEEKDAY,traffic_day)AS Day_traf,
-SUM(article_views)as WeekDay_Views,
-SUM(SUM(article_views)) over (partition by datename(MM,traffic_day)) as Month_Views,
-format(cast(SUM(article_views)as numeric)/SUM(SUM(article_views)) over (partition by datename(MM,traffic_day))*100,'#.##') as Views_Pct
-FROM articles art join traffic tr
-on art.article_id=tr.article_id
-GROUP BY datename(MM,traffic_day), datename(WEEKDAY,traffic_day)
-Order by case when datename(WEEKDAY,traffic_day)='Sunday' then 1 
-		      when datename(WEEKDAY,traffic_day)='Monday' then 2
-			  when datename(WEEKDAY,traffic_day)='Tuesday' then 3 
-			  when datename(WEEKDAY,traffic_day)='Wednesday' then 4 
-			  when datename(WEEKDAY,traffic_day)='Thursday' then 5 
-			  when datename(WEEKDAY,traffic_day)='Friday' then 6
-			  else 7 end
---12
-SELECT traffic_day,title,sum(article_views) as [Total Article Views],
-SUM(SUM(article_views)) over (partition by traffic_day) as TotalDailyViews,
-format(cast(SUM(article_views)as numeric)/SUM(SUM(article_views)) over (partition by traffic_day)*100,'#.##') as Views_Pct
-FROM articles art join traffic tr
-on art.article_id=tr.article_id
-Group by traffic_day,title
-
---13 Top Views Articles
-SELECT title,sum(article_views) as [Total Article Views],
-DENSE_RANK() over (order by sum(article_views)desc) as 'Drank'
-FROM articles art join traffic tr
-on art.article_id=tr.article_id
-where publication_date between '20201201' and '20201207'
-group by title
-
---ithers
-select distinct publication_date,datename(WEEKDAY,publication_date)ww,DAY(publication_date) as day_nu,
-datepart(dd,publication_date)part
-from articles
-where publication_date <= DATEADD(WK,-3,'2020-12-31')
-
---14
-SELECT category_name,product_name,sum(product_views)AS Prod_Views,
-DENSE_RANK() over (partition by category_name order by sum(product_views)desc) as Prod_Category_Drank
-FROM products pro join categories cat 
-on cat.category_id=pro.category_id
-JOIN traffic tr
-on pro.product_id=tr.product_id
-group by category_name,product_name
-
---15
-SELECT title,traffic_day,article_views as Curent_Day_View,
-LAG(article_views) over (partition by title order by traffic_day) as Prev_Day_Views,
-format(cast(article_views as numeric)/LAG(article_views) over (partition by title order by traffic_day)-1,'##.##') as pct_diff
-FROM articles art join traffic tr
-on art.article_id=tr.article_id
-order by title
-
---16
-;with Art_cte As (
-SELECT title,traffic_day,article_views,sum(article_views) over (partition by title order by traffic_day) as Run_views,
-COUNT(*) over (partition by title order by traffic_day) as Num_Days
-FROM articles art join traffic tr
-on art.article_id=tr.article_id
---where title like 'yes%'
-)
-SELECT title,Min(Num_Days) as 'Days_25K_views',DENSE_RANK() over (order by Min(Num_Days)) as Drank
-FROM Art_cte
-where Run_views>=25000
-GRoup by title
-
----17
-SELECT article_id,article_views,product_views,
-format(cast(product_views as numeric)/article_views*100,'#.##') as Red_Ratio,
-format(avg(cast(product_views as numeric)/article_views*100)  over (),'##.##') as [Avg Red Ratio]
-FROM  traffic
-
---18
-SELECT category_name,--sum(article_views)as Sum_cat_view,sum(product_views) as Sum_prod_view,
-format(avg(cast(product_views as numeric)/article_views*100),'##.##')  as [Avg Red Ratio]
-FROM  traffic tr join products pro
-on pro.product_id=tr.product_id
-JOIN categories cat
-on cat.category_id=pro.category_id
-group by category_name
-order by [Avg Red Ratio] desc
-
---19
-select *
-from article_types
-
-select	year(publication_date) as [Year Publi],
-		DATENAME(mm,publication_date)as [Month Public],
-		DATEPART(wk,publication_date)as [Week Public],
-		COunt(*) total_Articles,
-		COUNT(distinct case when art_type_desc='Clinical Case Studies' then article_id end) as 'Clinical',
-		COUNT(distinct case when art_type_desc='Feature Writing' then article_id end) as 'Feature Writing',
-		COUNT(distinct case when art_type_desc='Opinion' then article_id end) as 'Opinion',
-		COUNT(distinct case when art_type_desc='Investigative' then article_id end) as 'Investigative',
-		COUNT(distinct case when art_type_desc='News' then article_id end) as 'News'
-FROM articles art join article_types ty
-on art.article_type_id=ty.art_type_id
-Group by year(publication_date),DATENAME(mm,publication_date),DATEPART(wk,publication_date)
-Order by 1,2,3
-
---20
-;with pro_cte as (
-SELECT product_name,sum(product_views) as Sum_prod_views,
-DENSE_RANK() OVER (ORDER BY sum(product_views)) as drank_low,
-DENSE_RANK() OVER (ORDER BY sum(product_views) desc) as drank_top
-FROM  traffic tr join products pro
-on pro.product_id=tr.product_id
-group by product_name)
-
-select product_name,Sum_prod_views,
-case when drank_low=1 then 'Bottom' else 'Top' end as 'Top/Bottom' 
-from pro_cte
-where drank_top=1 or drank_low =1
-
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"386f2648-b8a3-4972-90ff-eb70312d7bba\" name=\"Changes\" comment=\"\" />\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"MarkdownSettingsMigration\">\r\n    <option name=\"stateVersion\" value=\"1\" />\r\n  </component>\r\n  <component name=\"ProjectColorInfo\"><![CDATA[{\r\n  \"associatedIndex\": 6\r\n}]]></component>\r\n  <component name=\"ProjectId\" id=\"2XiHf0XonAJrDnGyFxOfVUBr3G5\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\"><![CDATA[{\r\n  \"keyToString\": {\r\n    \"RunOnceActivity.OpenProjectViewOnStart\": \"true\",\r\n    \"RunOnceActivity.ShowReadmeOnStart\": \"true\",\r\n    \"settings.editor.selected.configurable\": \"advanced.settings\"\r\n  }\r\n}]]></component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"386f2648-b8a3-4972-90ff-eb70312d7bba\" name=\"Changes\" comment=\"\" />\r\n      <created>1699105081543</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1699105081543</updated>\r\n    </task>\r\n    <servers />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 6509c742f7d436d44ea16abf0f481d312d84cb9e)
+++ b/.idea/workspace.xml	(date 1699108110682)
@@ -11,26 +11,31 @@
     <option name="LAST_RESOLUTION" value="IGNORE" />
   </component>
   <component name="Git.Settings">
+    <option name="RECENT_BRANCH_BY_REPOSITORY">
+      <map>
+        <entry key="$PROJECT_DIR$" value="Trnas-Proj" />
+      </map>
+    </option>
     <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
   </component>
   <component name="MarkdownSettingsMigration">
     <option name="stateVersion" value="1" />
   </component>
-  <component name="ProjectColorInfo"><![CDATA[{
-  "associatedIndex": 6
-}]]></component>
+  <component name="ProjectColorInfo">{
+  &quot;associatedIndex&quot;: 6
+}</component>
   <component name="ProjectId" id="2XiHf0XonAJrDnGyFxOfVUBr3G5" />
   <component name="ProjectViewState">
     <option name="hideEmptyMiddlePackages" value="true" />
     <option name="showLibraryContents" value="true" />
   </component>
-  <component name="PropertiesComponent"><![CDATA[{
-  "keyToString": {
-    "RunOnceActivity.OpenProjectViewOnStart": "true",
-    "RunOnceActivity.ShowReadmeOnStart": "true",
-    "settings.editor.selected.configurable": "advanced.settings"
+  <component name="PropertiesComponent">{
+  &quot;keyToString&quot;: {
+    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
+    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
+    &quot;settings.editor.selected.configurable&quot;: &quot;advanced.settings&quot;
   }
-}]]></component>
+}</component>
   <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
   <component name="TaskManager">
     <task active="true" id="Default" summary="Default task">
